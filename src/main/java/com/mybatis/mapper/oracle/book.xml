<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team2.mbti.book.model.BookDAO">
	<sql id="searchWhere">
		<where>
			<if test="keywordCategory!=null and keywordCategory!=''">
				b.book_category like '%' || #{keywordCategory} || '%'
			</if>
			<if test="keywordNo!=null and keywordNo!=''">
				and b.book_no like '%' || #{keywordNo} || '%'
			</if>
			<if test="keywordTitle!=null and keywordTitle!=''">
				and b.book_title like '%' || #{keywordTitle} || '%'
			</if>
			<if test="keywordPublisher!=null and keywordPublisher!=''">
				and b.book_publisher like '%' || #{keywordPublisher} || '%'
			</if>
			<if test="keywordUseflag!=null and keywordUseflag!=''">
				and b.book_useflag like '%' || #{keywordUseflag} || '%'
			</if>
			<if test="keywordRegdate!=null and keywordRegdate!=''">
				and b.book_regdate >= #{keywordRegdate}
			</if>
			<if test="keywordRegdate2!=null and keywordRegdate2!=''">
				<![CDATA[and b.book_regdate <= to_date(#{keywordRegdate2})+1]]>
			</if>
		</where>
	</sql>
	
	<select id="selectBookAll" parameterType="stockBookVo" resultType="map" >
		SELECT *
		FROM
		(
		    select rownum as RNUM, A.* from
		    (
			   select b.*, s.stock_qty from 
			   book b join stock s
			   on b.book_no = s.book_no
			   <include refid="searchWhere" />
			   <if test="orderBy!=null and orderBy!=''">
					<if test="orderBy=='book_title'">
						order by b.book_title
					</if>
					<if test="orderBy=='book_title_desc'">
						order by b.book_title desc
					</if>
					<if test="orderBy=='book_regdate'">
						order by b.book_regdate
					</if>
					<if test="orderBy=='book_regdate_desc'">
						order by b.book_regdate desc
					</if>
					<if test="orderBy=='book_no'">
						order by b.book_no
					</if>
					<if test="orderBy=='book_no_desc'">
						order by b.book_no desc
					</if>
					<if test="orderBy=='book_price'">
						order by b.book_price
					</if>
					<if test="orderBy=='book_price_desc'">
						order by b.book_price desc
					</if>
					<!-- <if test="orderBy=='out_qty'">
						order by s.outputQty
					</if>
					<if test="orderBy=='out_qty_desc'">
						order by s.outputQty desc
					</if> -->
				</if>
				<if test="orderBy==null or orderBy==''">
					order by b.book_no desc
				</if>
		    )A
		)
   	 <![CDATA[
		WHERE RNUM > #{firstRecordIndex}
		and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}]]>
	</select>
	
	<select id="selectBookAllAjax" parameterType="stockBookVo" resultType="stockBookVo" >
		SELECT *
		FROM
		(
		    select rownum as RNUM, A.* from
		    (
			   select b.*, s.stock_qty from 
			   book b join stock s
			   on b.book_no = s.book_no
			   <include refid="searchWhere" />
			   <if test="orderBy!=null and orderBy!=''">
					<if test="orderBy=='book_title'">
						order by b.book_title
					</if>
					<if test="orderBy=='book_title_desc'">
						order by b.book_title desc
					</if>
					<if test="orderBy=='book_regdate'">
						order by b.book_regdate
					</if>
					<if test="orderBy=='book_regdate_desc'">
						order by b.book_regdate desc
					</if>
					<if test="orderBy=='book_no'">
						order by b.book_no
					</if>
					<if test="orderBy=='book_no_desc'">
						order by b.book_no desc
					</if>
					<if test="orderBy=='book_price'">
						order by b.book_price
					</if>
					<if test="orderBy=='book_price_desc'">
						order by b.book_price desc
					</if>
					<!-- <if test="orderBy=='out_qty'">
						order by s.outputQty
					</if>
					<if test="orderBy=='out_qty_desc'">
						order by s.outputQty desc
					</if> -->
				</if>
				<if test="orderBy==null or orderBy==''">
					order by b.book_no desc
				</if>
		    )A
		)
   	 <![CDATA[
		WHERE RNUM > #{firstRecordIndex}
		and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}]]>
	</select>
	
	<select id="selectBookCnt" parameterType="stockBookVo" resultType="int">
		select count(*) from 
		book b join stock s
		on b.book_no = s.book_no
		<include refid="searchWhere" />
	</select>
	
	
	
	<insert id="insertBook" parameterType="stockBookVo">
		<selectKey keyColumn="bookNo" order="BEFORE" resultType="int">
			select book_seq.nextval from dual
		</selectKey>
		insert
		INTO BOOK(book_no, book_title, book_price, book_publisher, book_img_name, book_img_size, book_img_originalname, book_category, book_writer, book_useflag, book_details, book_explains)
		<if test="bookCategory == '1'">
	        VALUES(#{bookNo} + 10000, #{bookTitle}, #{bookPrice}, #{bookPublisher},
	        #{bookImgName}, #{bookImgSize}, #{bookImgOriginalName}, #{bookCategory},
	        #{bookWriter}, #{bookUseflag}, #{bookDetails), #{bookExplains})
        </if>
        <if test="bookCategory == '2'">
		    VALUES(#{book_no} + 20000, #{bookTitle}, #{bookPrice}, #{bookPublisher},
	        #{bookImgName}, #{bookImgSize}, #{bookImgOriginalName}, #{bookCategory},
	        #{bookWriter}, #{bookUseflag}, #{bookDetails), #{bookExplains})
	    </if>
	    <if test="bookCategory == '3'">
	        VALUES(#{book_no} + 30000, #{bookTitle}, #{bookPrice}, #{bookPublisher},
	        #{bookImgName}, #{bookImgSize}, #{bookImgOriginalName}, #{bookCategory},
	        #{bookWriter}, #{bookUseflag}, #{bookDetails), #{bookExplains})
        </if>
        
	</insert>
	
	
</mapper>