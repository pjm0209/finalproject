<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team2.mbti.education.model.EducationDAO">
	<sql id="searchWhere">
		<where>
			<if test="searchKeyword!=null and searchKeyword!=''">
	      		${searchCondition} like '%' || #{searchKeyword} || '%'
	      	</if>
      	</where>
	</sql>
	
	
	<!-- list -->
	<insert id="insertEducation" parameterType="educationVo">
		<selectKey keyProperty="eduNo" order="BEFORE" resultType="int">
			select mbti_education_seq.nextval from dual
		</selectKey>
		insert into mbti_education(edu_no, edu_name, edu_com, edu_price, ep_no, edu_people_number, edu_tea_no)
		values(#{eduNo}, #{eduName}, #{eduCom}, #{eduPrice}, #{epNo}, #{eduPeopleNumber}, #{eduTeaNo})
	</insert>
	
	
	<select id="selectAllEducation" parameterType="educationVo" resultType="educationVo">
		select * from
		(
		    select rownum as RNUM, a.* from
		    (
		        select v.*,(select count(*) from education_application e where e.edu_no=v.edu_no) qty,
		        (select ep_name from education_place e where e.ep_no=v.ep_no) epName
		        from eduListview v
		        <include refid="searchWhere"></include>
		        order by edu_no desc
		    )a
		)
		<![CDATA[
		where RNUM > #{firstRecordIndex} 
		and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}]]>
	</select>
	
	<select id="getTotalRecordEducation" parameterType="educationVo" resultType="int">
		select count(*) from eduListview
		<include refid="searchWhere"></include> 
	</select>
	
	<select id="selectByEduNo" parameterType="int" resultType="educationVo">
		select * from education where edu_no=#{eduNo}
	</select>
	
	<update id="updateEducation" parameterType="educationVo">
		update mbti_education
		set edu_name = #{eduName}, edu_tea_no = #{eduTeaNo}, edu_com = #{eduCom}, edu_people_number = #{eduPeopleNumber}, edu_price = #{eduPrice}, ep_no = #{epNo} 
		where edu_no = #{eduNo}
	</update>
	
	<delete id="deleteEducation" parameterType="int" >
		delete from mbti_education
		where edu_no=#{eduNo} 
	</delete>
	
	<select id="getTeaName" resultType="educationVo">
		select * from education_teacher order by edu_tea_no
	</select>
	
	<select id="getEpName" resultType="educationVo">
		select * from education_place order by ep_no
	</select>
	
	
	<!-- location -->
	<insert id="insertLocation" parameterType="educationVo">
		<selectKey keyProperty="epNo" order="BEFORE" resultType="int">
			select education_place_seq.nextval from dual
		</selectKey>
		insert into education_place(ep_no, ep_name, ep_zipcode, ep_address,ep_tel)
		values(#{epNo},#{epName},#{epZipcode},#{epAddress},#{epTel})
	</insert>
	
	<select id="selectByNoEducation" parameterType="int" resultType="educationVo">
		select * from mbti_education where edu_no = #{eduNo}
	</select>
	
	<select id="selectAllLocation" parameterType="educationVo" resultType="educationVo">
		select * from
		(
		    select rownum RNUM,a.* from
		    (
		        select * from education_place 
		        <include refid="searchWhere"></include>
		        order by ep_no desc
		    )a
		)
		<![CDATA[
		where RNUM > #{firstRecordIndex} and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}]]>
	</select>
	
	<select id="getTotalRecordLocation" parameterType="educationVo" resultType="int">
		select count(*) from education_place
		<include refid="searchWhere"></include> 
	</select>
	
	<delete id="deleteLocation" parameterType="int" >
		delete from education_place
		where ep_no=#{epNo} 
	</delete>
	
	
	
	<!-- teacher -->
	<insert id="insertTeacher" parameterType="educationVo">
		<selectKey keyProperty="eduTeaNo" order="BEFORE" resultType="int">
			select education_teacher_seq.nextval from dual
		</selectKey>
		insert into education_teacher(edu_tea_no, edu_tea_name, edu_tea_id, edu_tea_pwd, edu_tea_email, edu_tea_tel)
		values(#{eduTeaNo},#{eduTeaName},#{eduTeaId},#{eduTeaPwd},#{eduTeaEmail},#{epTeaTel})
	</insert>
	
	<select id="selectAllTeacher" parameterType="educationVo" resultType="educationVo">
		select * from
		(
		    select rownum RNUM,a.* from
		    (
		        select * from education_teacher 
		        <include refid="searchWhere"></include>
		        order by edu_tea_no desc
		    )a
		)
		<![CDATA[
		where RNUM > #{firstRecordIndex} and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}]]>
	</select>
	
	<select id="getTotalRecordTeacher" parameterType="educationVo" resultType="int">
		select count(*) from education_teacher
		<include refid="searchWhere"></include> 
	</select>
	
	<delete id="deleteTeacher" parameterType="int" >
		delete from education_teacher
		where edu_tea_no=#{eduTeaNo} 
	</delete>
	
	
	<!-- applicant -->
	<select id="selectAllApplicant" parameterType="educationVo" resultType="educationVo">
		select * from
		(
			select rownum RNUM, a.* from
			(
				select e.*,(select count(*) from education_application app where e.edu_no = app.edu_no and app.edu_app_flag = 'Y') qty
				from educationview e
				<include refid="searchWhere"></include>
				order by edu_app_no desc
			)a
		)
		<![CDATA[
		where RNUM > #{firstRecordIndex} and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}]]>
	</select>
	
	<select id="getTotalRecordApplicant" parameterType="educationVo" resultType="int">
		select count(*) from educationview
		<include refid="searchWhere"></include> 
	</select>
	
	<delete id="deleteApplicant" parameterType="int" >
		delete from education_application
		where edu_app_no=#{eduAppNo} 
	</delete>
	
	<update id="updateApplicant" parameterType="int">
		update education_application
		set edu_app_flag = 'Y'
		where edu_app_no = #{eduAppNo}
	</update>
	
</mapper>